import java.util.Scanner;

public class EjerciciosTema2 {

	static Scanner scan = new Scanner(System.in);

//1.

//Diseñar un procedimiento que intercambie el valor de dos variables de tipo entero. 
//Incluir el algoritmo principal que realice la llamada a este procedimiento.

	public static int x = 5;
	public static int y = 7;

	public static void Ejercicio1() {

		int aux;

		aux = y;

		y = x;

		x = aux;

	}

//2.

//Diseñar una función que tenga como entrada tres números enteros y nos devuelva el mayor de los tres.
//Incluir el algoritmo principal que realice la llamada a esta función.

	public static int Ejercicio2(int a, int b, int c) {
		if (a >= b && a >= c)
			return a;
		else if (b >= a && b >= c)
			return b;
		else
			return c;
	}

//3.

//Diseñar unan función que permita calcular el número e, usando la expresión:

//e = 1 + 1/1! + 1/2! + 1/3! + ...

//La precisión indicará el número de términos de la serie que se habrán de tomar 
//en cada caso, y será un dato de entrada. Como paso previo se deberá diseñar la función
//que calcule el factorial de un nuevo número.

	public static double factorial(double n) {
		double fact = 0;

		for (double i = n - 1; i >= 1; i--) {
			fact = n * i;
			n = fact;
		}
		return n;

	}

	public static double Ejercicio3(int n) {
		double aprox = 0.0;
		for (double i = n; i >= 1; i--) {
			aprox = aprox + 1 / factorial(n);
			n--;
		}
		return aprox + 1;
	}

//4.

//Diseñar una función que admite, como parámetro de entrada, un carácter y que devuelva, 
//como parámetro de  salida,  el  nº  de  veces  que  aparece  dicho  carácter  en  una 
//secuencia de caracteres leída  de  teclado.  Dicha  secuencia  concluirá  cuando  el  
//usuario introduzca un punto.

	public static int contadorChar(char x, String cadena) {
		Scanner scan = new Scanner(System.in);
		int posicion, sum = 0;

		posicion = cadena.indexOf(x);

		for (int i = 0; i < cadena.length(); i++) {
			if (cadena.charAt(i) == '.') {
				return sum;
			} else if (cadena.charAt(i) == x) {
				sum++;
				posicion = cadena.indexOf(x, posicion + 1);
			}
		}
		return sum;
	}

	public static void Ejercicio4(char x) {
		String cadena;
		System.out.println("Introduzca cadena de caracteres: ");
		cadena = scan.nextLine();
		System.out.println("El número de veces que \"" + x + "\" se repite es: " + contadorChar(x, cadena) + " veces.");
	}

//5.

//Diseñar una función que invierta los dígitos de un número entero positivo.

	public static String Ejercicio5(int x) {
		int aux;
		String cadena = "";
		for (int i = x; i >= 1; i = i / 10) {
			aux = i % 10;
			cadena = cadena + Integer.toString(aux);
		}
		return cadena;
	}

//6.

//Diseñar una función que decida si dos números enteros positivos son amigos. Dos 
//números son amigos si la suma de los divisores, distintos de sí mismo, de cada uno 
//de ellos, coincide con el otro número. Ejemplo, 284 y 220 son dos números amigos.

	public static int sumDivisores(int n) {
		int sum = 0;

		for (int i = n - 1; i >= 1; i--) {
			if (n % i == 0) {
				sum += i;
			}
		}
		System.out.println(n);
		return sum;
	}

	public static void Ejercicio6(int x, int y) {
		if (sumDivisores(x) != y) {
			System.out.println("Los números no son amiwis.");
		} else {
			if (sumDivisores(y) == x) {
				System.out.println("Los números si son amiwis.");
			} else {
				System.out.println("Los números no son amiwis.");
			}
		}
	}

// 7.

//Diseñar  una  función  que  dado  un  número  entero  positivo,  diga  si  es  o  no
//un número  perfecto,  sabiendo  que  un  número  perfecto  es  aquel  para  el  cual  la 
//suma  de  sus divisores enteros positivos (excepto el mismo) coincide con el número. 
//Por ejemplo, 6 es un número  perfecto  porque  la  suma  de  sus  divisores  enteros  1,  
//2  y  3  es  igual  a  6.  8  no  es  un número perfecto, porque la suma de sus divisores 
//enteros, 1+2+4 es distinto de 8.

	public static boolean Ejercicio7(int n) {
		if (sumDivisores(n) == n) {
			return true;
		} else {
			return false;
		}
	}

//8.

//Implementar un programa de registro y login. En primer lugar se ejecutará el código 
//de registro y en segundo lugar se solicitará el login.

//- Implementar un procedimiento registro():se solicitará un nombre de usuario, una contraseña 
//y se pedirá de nuevo la contraseña para verificar su corrección. Si las contraseñas coinciden 
//se continuará con la ejecución del login, en caso contrario se mostrará el mensaje "La contraseña "
//"no coincide y finalizará el programa".

//- Implementar una función login(): se solicitará el nombre de usuario y la contraseña. Si ambos 
//coinciden se devolverá un valor booleano verdadero. 

//- Según  el  valor  del  booleano  de  la  
//función  login  debe  mostrarse  el  mensaje  "Acceso  autorizado  a nombre_usuario",  o  se 
//mostrará el mensaje "Acceso denegado" y finalizará el programa.

	public static void registro() {
		Scanner scan = new Scanner(System.in);
		String nombreuser, password, password1;

		System.out.println("Introduzca un nombre de usuario: ");
		nombreuser = scan.next();
		System.out.println("Introduzca su contraseña: ");
		password = scan.next();
		System.out.println("Introduzca de nuevo su contraseña: ");
		password1 = scan.next();
		if (password.equals(password1)) {
			if (login(nombreuser, password)) {
				System.out.println("Acceso autorizado a " + nombreuser);
			} else {
				System.out.println("Acceso denegado");
			}
		} else {
			System.out.println("La contraseña no coincide y finalizará el programa.");
		}
	}

	public static boolean login(String nombreuser, String password) {
		Scanner scan = new Scanner(System.in);

		System.out.println("Introduzca un nombre de usuario: ");
		String nombreuser1 = scan.next();
		System.out.println("Introduzca su contraseña: ");
		String password1 = scan.next();
		if (nombreuser.equals(nombreuser1)) {
			if (password.equals(password1)) {
				return true;
			} else {
				System.out.println("Contraseña incorrecta.");
			}

		} else {
			System.out.println("Usuario incorrecto.");

		}
		return false;
	}
//9.

// Desarrolla un programa que permita realizar sumas, restas, multiplicaciones y
// divisiones con 2 números enteros (0-9). El programa debe cubrir las
// siguientes especificaciones, creando y haciendo uso de las funciones o
// procedimientos necesarios:

//- En primer lugar el programa debe solicitar los 2 dígitos.

//- En segundo lugar se solicita la operación a realizar. Las operaciones admitidas serán: sumar (o +), restar (o -), multiplicar (o *), dividir (/).

//- El usuario podrá introducir los operandos en formato numérico o textual. Ej.: Se admite las entradas 1, uno o UNO.

//- Para el formato numérico se admitirá cualquier valor, mientras que para el formato textual sólo se admitirán unidades (cero-nueve).

//- El programa debe controlar los errores de usuario, advirtiendo por pantalla que se ha producido.

	public static void Ejercicio9() {
		Scanner scan = new Scanner(System.in);
		int x1, x2;
		char ope;

		System.out.println("Introduzca el primer dígito: ");
		x1 = parseoVal(scan.next());

		System.out.println("Introduzca el segundo dígito: ");
		x2 = parseoVal(scan.next());

		System.out.println(
				"Introduzca el caracter de la operación a realizar (suma (o +), resta (o -), multiplicacion (o *), division (o /)");
		ope = parseoOp(scan.next());

		System.out.println("El resultado de la operación es: " + operacioncamaron(x1, x2, ope));
	}

	public static double operacioncamaron(int x1, int x2, char ope) {
		double n = 0;
		switch (ope) {
		case '+':
			n = x1 + x2;
			break;
		case '-':
			n = x1 - x2;
			break;
		case '*':
			n = x1 * x2;
			break;
		case '/':
			n = x1 / x2;
			break;
		default:
			System.out.println("Operación desconocidaaaa");
		}
		return n;
	}

	public static char parseoOp(String y) {
		y = y.toLowerCase();
		char z = y.charAt(0);
		if (y.length() > 1) {
			switch (y) {
			case "suma":
				z = '+';
				break;
			case "resta":
				z = '-';
				break;
			case "multiplicacion":
				z = '*';
				break;
			case "division":
				z = '/';
				break;
			default:
				System.out.println("Caracter erróneo.");
			}
		}
		return z;
	}

	public static int parseoVal(String x) {
		int a = 0;
		x = x.toLowerCase();
		if (x.length() > 1) {
			switch (x) {
			case "cero":
				a = 0;
				break;
			case "uno":
				a = 1;
				break;
			case "dos":
				a = 2;
				break;
			case "tres":
				a = 3;
				break;
			case "cuatro":
				a = 4;
				break;
			case "cinco":
				a = 5;
				break;
			case "seis":
				a = 6;
				break;
			case "siete":
				a = 7;
				break;
			case "ocho":
				a = 8;
				break;
			case "nueve":
				a = 9;
				break;

			default:
				System.out.println("Entrada incorrecta.");
			}

		} else {
			a = Integer.parseInt(x);
		}
		return a;
	}

	// 10.

//Realiza un programa que contenga varias funciones para calcular el área y el perímetro de circunferencias, rectángulos, cuadrados y 
//triángulos equiláteros. En el cuerpo del programa prueba las funciones.

	public static void Ejercicio10() {
		Scanner scan = new Scanner(System.in);
		int x, y;
		String uwu;

		System.out.println("Introduzca el primer valor medido: ");
		x = scan.nextInt();

		System.out.println("Introduzca el segundo valor medido: ");
		y = scan.nextInt();

		System.out.println("Introduzca la forma geométrica (rectangulo, cuadrado, circunferencia o triangulo): ");
		uwu = scan.next().toUpperCase();
		if (uwu.equals("RECTANGULO") || uwu.equals("TRIANGULO") || uwu.equals("CUADRADO")
				|| uwu.equals("CIRCUNFERENCIA")) {
			System.out.println(
					"El área de: " + uwu + " es " + area(x, y, uwu) + " y el perímetro es " + perimetro(x, y, uwu));
		} else {
			System.out.println("Figura equivocada.");
		}

	}

	public static double area(int x, int y, String uwu) {
		double area = 0.0;
		switch (uwu) {
		case "RECTANGULO":
			area = x * y;
			break;
		case "CIRCULO":
			area = Math.PI * x * x;
			break;
		case "CUADRADO":
			area = x * x;
			break;
		case "TRIANGULO":
			area = (x * y) / 2;
			break;
		default:
		}
		return area;
	}

	public static double perimetro(int x, int y, String uwu) {
		double peri = 0.0;
		switch (uwu) {
		case "RECTANGULO":
			peri = 2 * x + 2 * y;
			break;
		case "CIRCULO":
			peri = 2 * Math.PI * x;
			break;
		case "CUADRADO":
			peri = 4 * x;
			break;
		case "TRIANGULO":
			peri = x + x + x;
			break;
		default:
			System.out.println("Forma geométrica errónea.");
		}
		return peri;
	}

	public static void main(String[] args) {
		// 1.

//		Ejercicio1();
//		System.out.println("X es: " + x + "\nY es: " + y);

		// 2.

//		System.out.println(Ejercicio2(14, 13, 7));

		// 3.

//		System.out.println(Ejercicio3(5));

		// 4.

//		Ejercicio4('a');

		// 5.

//		System.out.println(Ejercicio5(1500));

		// 6.

//      Ejercicio6(220, 284);

		// 7.

		Ejercicio7(28); 
		
		if () {
			
		}

		// 8.

//		registro();

		// 9.

//		Ejercicio9();

		// 10.

//		Ejercicio10();
	}
}
